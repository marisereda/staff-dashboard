generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Employee {
  id         String   @id @default(cuid())
  code1C     String?
  inn        String?
  name       String
  phone      String?
  isFop      Boolean? @default(false)
  markDelete Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workPlaces    Workplace[]
  workPlacesBuh WorkplaceBuh[]
  notes         Note[]
}

model Employer {
  id          String   @id @default(cuid())
  inn         String   @unique
  name        String
  isSingleTax Boolean? @default(false)
  markDelete  Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workPlacesBuh WorkplaceBuh[]
  notes         Note[]
}

model Store {
  id             String   @id @default(cuid())
  code1C         String   @unique
  address        String
  checkoutNumber Int?
  markDelete     Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workplaces    Workplace[] @relation("store")
  newWorkplaces Workplace[] @relation("newStore")
  notes         Note[]
}

model Workplace {
  id            String   @id @default(cuid())
  employeeId    String
  storeId       String
  newStoreId    String?
  positionHr    String
  newPositionHr String?
  markDelete    Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employee Employee @relation(fields: [employeeId], references: [id])
  store    Store    @relation(name: "store", fields: [storeId], references: [id])
  newStore Store?   @relation(name: "newStore", fields: [newStoreId], references: [id])
}

model WorkplaceBuh {
  id          String   @id @default(cuid())
  employeeId  String
  employerId  String
  positionBuh String
  addressBuh  String
  markDelete  Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employee Employee @relation(fields: [employeeId], references: [id])
  employer Employer @relation(fields: [employerId], references: [id])
}

model Note {
  id          String   @id @default(cuid())
  ownerId     String?
  title       String
  content     String?
  isDone      Boolean?
  isImportant Boolean?
  markDelete  Boolean? @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employee Employee? @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  employer Employer? @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  store    Store?    @relation(fields: [ownerId], references: [id], onDelete: Cascade)
}
